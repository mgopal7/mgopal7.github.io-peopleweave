{"ast":null,"code":"import { Table, Thead, Tbody, Tr, Th, Td, Button, Text } from \"@chakra-ui/react\";\nimport Papa from 'papaparse';\nclass DataPage {\n  constructor(data, pageSize, tableContainerId) {\n    this.data = data;\n    this.pageSize = pageSize;\n    this.currentPage = 1;\n    this.sortBy = '';\n    this.sortOrder = 'asc';\n    this.filterBy = '';\n    this.filteredData = [];\n    this.tableContainer = document.getElementById(tableContainerId);\n    this.table = document.createElement(Table);\n    this.prevButton = document.createElement(Button);\n    this.nextButton = document.createElement(Button);\n    this.currentPageText = document.createElement(Text);\n\n    // Parse CSV data using Papa Parse\n    Papa.parse(\"data.csv\", {\n      header: true,\n      download: true,\n      complete: results => {\n        // Create header row\n        const headerRow = this.table.insertRow();\n        for (let i = 0; i < results.meta.fields.length; i++) {\n          const headerCell = headerRow.insertCell();\n          headerCell.innerHTML = results.meta.fields[i];\n\n          // Add sorting functionality to header cells\n          headerCell.addEventListener('click', () => {\n            if (this.sortBy === results.meta.fields[i]) {\n              this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n            } else {\n              this.sortBy = results.meta.fields[i];\n              this.sortOrder = 'asc';\n            }\n            this.renderTable();\n          });\n        }\n\n        // Convert data to array of objects\n        this.filteredData = results.data.map(row => {\n          return Object.assign({}, row);\n        });\n        this.renderTable();\n      }\n    });\n\n    // Create pagination controls\n    this.prevButton.children[0].innerText = 'Prev';\n    this.prevButton.colorScheme = 'teal';\n    this.prevButton.disabled = true;\n    this.prevButton.onClick = () => {\n      this.currentPage -= 1;\n      this.renderTable();\n    };\n    this.nextButton.children[0].innerText = 'Next';\n    this.nextButton.colorScheme = 'teal';\n    this.nextButton.disabled = true;\n    this.nextButton.onClick = () => {\n      this.currentPage += 1;\n      this.renderTable();\n    };\n    this.currentPageText.innerText = `Page ${this.currentPage}`;\n    this.tableContainer.appendChild(this.prevButton);\n    this.tableContainer.appendChild(this.currentPageText);\n    this.tableContainer.appendChild(this.nextButton);\n    this.tableContainer.appendChild(this.table);\n  }\n  filterData() {\n    if (this.filterBy === '') {\n      this.filteredData = this.filteredData.slice();\n    } else {\n      this.filteredData = this.filteredData.filter(row => {\n        return Object.values(row).some(val => {\n          return val.toLowerCase().includes(this.filterBy.toLowerCase());\n        });\n      });\n    }\n  }\n  sortData() {\n    if (this.sortBy === '') {\n      return;\n    }\n    this.filteredData.sort((a, b) => {\n      if (this.sortOrder === 'asc') {\n        return a[this.sortBy].localeCompare(b[this.sortBy]);\n      } else {\n        return b[this.sortBy].localeCompare(a[this.sortBy]);\n      }\n    });\n  }\n  renderTable() {\n    // Apply filter and sort\n    this.filterData();\n    this.sortData();\n\n    // Calculate pagination variables\n    const totalPages = Math.ceil(this.filteredData.length / this.pageSize);\n    const startIndex = (this.currentPage - 1) * this.pageSize;\n    const endIndex = Math.min(startIndex + this.pageSize, this.filteredData.length);\n\n    // Update table contents\n    this.table.innerHTML = '';\n    const headerRow = this.table.insertRow();\n    for (let i = 0; i < this.filteredData.length; i++) {\n      if (i >= startIndex && i < endIndex) {\n        const row = this.table.insertRow();\n        for (const key in this.filteredData[i]) {\n          const cell = row.insertCell();\n          cell.innerHTML = this.filteredData[i][key];\n        }\n      }\n    }\n\n    // Update pagination controls\n    if (this.currentPage === 1) {\n      this.prevButton.disabled = true;\n    } else {\n      this.prevButton.disabled = false;\n    }\n    if (this.currentPage === totalPages) {\n      this.nextButton.disabled = true;\n    } else {\n      this.nextButton.disabled = false;\n    }\n    this.currentPageText.innerText = `Page ${this.currentPage} of ${totalPages}`;\n  }\n  search(filter) {\n    this.filterBy = filter;\n    this.currentPage = 1;\n    this.renderTable();\n  }\n}\nexport default DataPage;","map":{"version":3,"names":["Table","Thead","Tbody","Tr","Th","Td","Button","Text","Papa","DataPage","constructor","data","pageSize","tableContainerId","currentPage","sortBy","sortOrder","filterBy","filteredData","tableContainer","document","getElementById","table","createElement","prevButton","nextButton","currentPageText","parse","header","download","complete","results","headerRow","insertRow","i","meta","fields","length","headerCell","insertCell","innerHTML","addEventListener","renderTable","map","row","Object","assign","children","innerText","colorScheme","disabled","onClick","appendChild","filterData","slice","filter","values","some","val","toLowerCase","includes","sortData","sort","a","b","localeCompare","totalPages","Math","ceil","startIndex","endIndex","min","key","cell","search"],"sources":["/Users/meghnagopalan/Desktop/mgopal7.github.io-peopleweave/my-app/src/DataPage.js"],"sourcesContent":["import { Table, Thead, Tbody, Tr, Th, Td, Button, Text } from \"@chakra-ui/react\"\nimport Papa from 'papaparse';\n\n\nclass DataPage {\n  constructor(data, pageSize, tableContainerId) {\n    this.data = data;\n    this.pageSize = pageSize;\n    this.currentPage = 1;\n    this.sortBy = '';\n    this.sortOrder = 'asc';\n    this.filterBy = '';\n    this.filteredData = [];\n    this.tableContainer = document.getElementById(tableContainerId);\n    this.table = document.createElement(Table);\n    this.prevButton = document.createElement(Button);\n    this.nextButton = document.createElement(Button);\n    this.currentPageText = document.createElement(Text);\n\n    // Parse CSV data using Papa Parse\n    Papa.parse(\"data.csv\", {\n      header: true,\n      download: true,\n      complete: (results) => {\n        // Create header row\n        const headerRow = this.table.insertRow();\n        for (let i = 0; i < results.meta.fields.length; i++) {\n          const headerCell = headerRow.insertCell();\n          headerCell.innerHTML = results.meta.fields[i];\n\n          // Add sorting functionality to header cells\n          headerCell.addEventListener('click', () => {\n            if (this.sortBy === results.meta.fields[i]) {\n              this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n            } else {\n              this.sortBy = results.meta.fields[i];\n              this.sortOrder = 'asc';\n            }\n            this.renderTable();\n          });\n        }\n\n        // Convert data to array of objects\n        this.filteredData = results.data.map(row => {\n          return Object.assign({}, row);\n        });\n\n        this.renderTable();\n      }\n    });\n\n    // Create pagination controls\n    this.prevButton.children[0].innerText = 'Prev';\n    this.prevButton.colorScheme = 'teal';\n    this.prevButton.disabled = true;\n    this.prevButton.onClick = () => {\n      this.currentPage -= 1;\n      this.renderTable();\n    };\n    this.nextButton.children[0].innerText = 'Next';\n    this.nextButton.colorScheme = 'teal';\n    this.nextButton.disabled = true;\n    this.nextButton.onClick = () => {\n      this.currentPage += 1;\n      this.renderTable();\n    };\n    this.currentPageText.innerText = `Page ${this.currentPage}`;\n    this.tableContainer.appendChild(this.prevButton);\n    this.tableContainer.appendChild(this.currentPageText);\n    this.tableContainer.appendChild(this.nextButton);\n    this.tableContainer.appendChild(this.table);\n  }\n\n  filterData() {\n    if (this.filterBy === '') {\n      this.filteredData = this.filteredData.slice();\n    } else {\n      this.filteredData = this.filteredData.filter(row => {\n        return Object.values(row).some(val => {\n          return val.toLowerCase().includes(this.filterBy.toLowerCase());\n        });\n      });\n    }\n  }\n\n  sortData() {\n    if (this.sortBy === '') {\n      return;\n    }\n    this.filteredData.sort((a, b) => {\n      if (this.sortOrder === 'asc') {\n        return a[this.sortBy].localeCompare(b[this.sortBy]);\n      } else {\n        return b[this.sortBy].localeCompare(a[this.sortBy]);\n      }\n    });\n  }\n\n  renderTable() {\n    // Apply filter and sort\n    this.filterData();\n    this.sortData();\n\n    // Calculate pagination variables\n    const totalPages = Math.ceil(this.filteredData.length / this.pageSize);\n    const startIndex = (this.currentPage - 1) * this.pageSize;\n    const endIndex = Math.min(startIndex + this.pageSize, this.filteredData.length);\n\n    // Update table contents\n    this.table.innerHTML = '';\n    const headerRow = this.table.insertRow();\n    for (let i = 0; i < this.filteredData.length; i++) {\n      if (i >= startIndex && i < endIndex) {\n        const row = this.table.insertRow();\n        for (const key in this.filteredData[i]) {\n          const cell = row.insertCell();\n          cell.innerHTML = this.filteredData[i][key];\n        }\n      }\n    }\n\n    // Update pagination controls\n    if (this.currentPage === 1) {\n      this.prevButton.disabled = true;\n    } else {\n      this.prevButton.disabled = false;\n    }\n    if (this.currentPage === totalPages) {\n      this.nextButton.disabled = true;\n    } else {\n      this.nextButton.disabled = false;\n    }\n    this.currentPageText.innerText = `Page ${this.currentPage} of ${totalPages}`;\n  }\n\n  search(filter) {\n    this.filterBy = filter;\n    this.currentPage = 1;\n    this.renderTable();\n  }\n}\n\nexport default DataPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}